class Rover:
    def __init__(self, location, orientation):
        # self.location= location
        self.x = location[0]
        self.y = location[1]
        self.orientation = orientation
        self.mapp = ['N', 'W', 'S', 'E']
        self.func_map = {
            'F': self.moveFoward,
            'B': self.moveBack,
            'L': self.turnLeft,
            'R': self.turnRight
        }

    def moveFoward(self, field):
        if self.orientation == 'N':
            if not self.meetObstacle((self.x,Add(self.y, field.Y)),field.obstacles):
                raise MeetObstacleException
            self.y = Add(self.y, field.Y)
        if self.orientation == 'S':
            self.y = Minus(self.y)
        if self.orientation == 'E':
            self.x = Add(self.x, field.X)
        if self.orientation == 'W':
            self.x = Minus(self.x)
        return self

    def moveBack(self, field):
        if self.orientation == 'N':
            self.y = Minus(self.y)
        if self.orientation == 'S':
            self.y = Add(self.y, field.Y)
        if self.orientation == 'E':
            self.x = Minus(self.x)
        if self.orientation == 'W':
            self.x = Add(self.x, field.X)
        return self

    def turnLeft(self, field):
        i = self.mapp.index(self.orientation)
        if i + 1 < len(self.mapp):
            self.orientation = self.mapp[i + 1]
        else:
            self.orientation = self.mapp[i + 1 - len(self.mapp)]
        return self

    def turnRight(self, field):
        i = self.mapp.index(self.orientation)
        self.orientation = self.mapp[i - 1]
        return self

    def meetObstacle(self, moveto, obstacles):
        if moveto in obstacles:
            return False
        return True


def Minus(location):
    if location - 1 >= 0:
        location -= 1
    else:
        raise Exception('Out Field! The car has stopped!')
    return location


def Add(location, border):
    if location + 1 <= border:
        location += 1
    else:
        raise Exception('Out Field! The car has stopped!')
    return location

class MeetObstacleException(Exception):
    pass
