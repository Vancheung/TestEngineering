区域信息： 长度X 宽度Y √ 障碍列表[(x1,y1),(x2,y2)]

火星车：
    位置信息：self.location √
        地点：(x,y)  √
        朝向: N,S,E,W √
        重构朝向 √

    接收指令方法：
        移动：f,b exception(meetObstacle,outField)
        转向: l,r √

重构指令类：Cmd √
    cmd = 'ffflbbbrf'
    map = {
        'f':moveFoward,
        'b':moveBack,
        'l':turnLeft,
        'r':turnRight
    }
    初始化区域：I 80 80  √
    初始化火星车位置：i 0 0 N √



超出区域：outField √
    当区域起点与终点重合时（长度or宽度=球围）——从一边跑出，可以从另一边进入
    当区域小于球体时，小车禁止超出区域√

障碍处理：meetObstacle √
    回报异常√
    停止移动√
    放弃后续指令√

指令处理函数：Execute(cmds,rover)√
    输入：指令集，火星车类√

    输出：火星车类（location信息已发生变化）——Rover.getLocation()
    异常处理：超出区域+遇到障碍√

    try:
        rover.map[cmd[i]]() for i in range(len(cmd))
    except Exception as e:
        print(e)
